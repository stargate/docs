{
	"info": {
		"_postman_id": "916a1dee-0c25-4248-b685-feaf651aa1be",
		"name": "Stargate-OSS-Astra-Document-API:library",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12949543"
	},
	"item": [
		{
			"name": "authentication",
			"item": [
				{
					"name": "Create a auth token (Stargate OSS only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"AUTH_TOKEN\", jsonData.authToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{auth_username}}\",\n    \"password\": \"{{auth_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_auth_url}}/{{base_auth_api_path}}",
							"host": [
								"{{base_auth_url}}"
							],
							"path": [
								"{{base_auth_api_path}}"
							],
							"query": [
								{
									"key": "username",
									"value": "cassandra",
									"disabled": true
								},
								{
									"key": "password",
									"value": "cassandra",
									"disabled": true
								}
							]
						},
						"description": "{{base_rest_url}}/v2/schemas/keyspaces"
					},
					"response": []
				}
			]
		},
		{
			"name": "create schema",
			"item": [
				{
					"name": "Create a simple namespace test (Stargate OSS only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify namespace name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(pm.variables.get(\"namespace\"));",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{namespace}}\"\n}"
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_schema}}",
							"host": [
								"{{base_doc_url}}{{base_doc_schema}}"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						}
					]
				},
				{
					"name": "Create a namespace test with RF (Stargate OSS only)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify namespace name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(pm.variables.get(\"namespace\"));",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{namespace}}\",\n    \"replicas\": 1\n}"
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_schema}}",
							"host": [
								"{{base_doc_url}}{{base_doc_schema}}"
							]
						}
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						}
					]
				},
				{
					"name": "Create a namespace test_dcs with DCs (Stargate OSS only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify namespace name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"myworld_dcs\");",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"test_dcs\",\n    \"datacenters\": [ {\"name\": \"dc1\"}, {\"name\": \"dc2\", \"replicas\": 3} ]\n}"
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_schema}}",
							"host": [
								"{{base_rest_url}}{{base_doc_schema}}"
							]
						}
					},
					"response": [
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "retrieve schema",
			"item": [
				{
					"name": "Get all namespaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify namespace test\", function () {",
									"    var jsonData = pm.response.json();",
									"    for (var i=0; i <= jsonData.data.length; i++)",
									"    {",
									"        if (jsonData.data[i].name=== pm.variables.get(\"namespace\")){",
									"            result=true;",
									"            //console.log(jsonData.data[i].name)",
									"            break;",
									"        }",
									"    }",
									"    pm.expect(true).to.eql(result);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_schema}}",
							"host": [
								"{{base_rest_url}}{{base_doc_schema}}"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Get all namespaces",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "{{AUTH_TOKEN}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_rest_url}}{{base_doc_schema}}",
									"host": [
										"{{base_rest_url}}{{base_doc_schema}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 07 Jul 2022 17:59:06 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Length",
									"value": "204"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"name\": \"system_schema\"\n        },\n        {\n            \"name\": \"system\"\n        },\n        {\n            \"name\": \"system_auth\"\n        },\n        {\n            \"name\": \"system_distributed\"\n        },\n        {\n            \"name\": \"system_traces\"\n        },\n        {\n            \"name\": \"stargate_system\"\n        },\n        {\n            \"name\": \"data_endpoint_auth\"\n        },\n        {\n            \"name\": \"test\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get a particular namespace (test)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify namespace test\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.name).to.eql(pm.variables.get(\"namespace\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_schema}}/{{namespace}}",
							"host": [
								"{{base_rest_url}}{{base_doc_schema}}"
							],
							"path": [
								"{{namespace}}"
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Get namespaces test",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "{{AUTH_TOKEN}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_rest_url}}{{base_doc_schema}}/{{namespace}}",
									"host": [
										"{{base_rest_url}}{{base_doc_schema}}"
									],
									"path": [
										"{{namespace}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 06 Jul 2022 21:29:09 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Length",
									"value": "24"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"name\": \"test\"\n    }\n}"
						},
						{
							"name": "Get a particular namespace (test)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "{{AUTH_TOKEN}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_rest_url}}{{base_doc_schema}}/{{namespace}}",
									"host": [
										"{{base_rest_url}}{{base_doc_schema}}"
									],
									"path": [
										"{{namespace}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 07 Jul 2022 21:20:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Length",
									"value": "24"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"name\": \"test\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get built-in functions for a particular namespace",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// pm.test(\"Verify namespace myworld\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     for (var i=0; i <= jsonData.data.length; i++)",
									"//     {",
									"//         if (jsonData.data[i].name=== pm.variables.get(\"namespace\")){",
									"//             result=true;",
									"//             //console.log(jsonData.data[i].name)",
									"//             break;",
									"//         }",
									"//     }",
									"//     pm.expect(true).to.eql(result);",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_schema}}/{{namespace}}/functions",
							"host": [
								"{{base_doc_url}}{{base_doc_schema}}"
							],
							"path": [
								"{{namespace}}",
								"functions"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Get built-in functions for a particular namespace",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "{{AUTH_TOKEN}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_doc_url}}{{base_doc_schema}}/{{namespace}}/functions",
									"host": [
										"{{base_doc_url}}{{base_doc_schema}}"
									],
									"path": [
										"{{namespace}}",
										"functions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 07 Jul 2022 17:59:39 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Length",
									"value": "168"
								}
							],
							"cookie": [],
							"body": "{\n    \"functions\": [\n        {\n            \"name\": \"$push\",\n            \"description\": \"Appends data to the end of an array\"\n        },\n        {\n            \"name\": \"$pop\",\n            \"description\": \"Removes data from the end of an array, returning it\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Create collection schema",
			"item": [
				{
					"name": "Create empty collection library",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// pm.test(\"Verify collection is made\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     // fix next line",
									"//     pm.expect(jsonData.collectionId).exist;",
									"// ;",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"library\"\n}"
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "Create empty collection library2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify document is made\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.documentId).exist;",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"library2\"\n}"
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "Create collection with JSON schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify document is made\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.documentId).exist;",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Person\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"firstName\": {\n      \"type\": \"string\",\n      \"description\": \"The person's first name.\"\n    },\n    \"lastName\": {\n      \"type\": \"string\",\n      \"description\": \"The person's last name.\"\n    },\n    \"age\": {\n      \"description\": \"Age in years which must be equal to or greater than zero.\",\n      \"type\": \"integer\",\n      \"minimum\": 0\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection2}}/json-schema",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection2}}",
								"json-schema"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "Put a JSON Schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify namespace name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(pm.variables.get(\"namespace\"));",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Person\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"firstName\": {\n      \"type\": \"string\",\n      \"description\": \"The person's first name.\"\n    },\n    \"lastName\": {\n      \"type\": \"string\",\n      \"description\": \"The person's last name.\"\n    },\n    \"age\": {\n      \"description\": \"Age in years which must be equal to or greater than zero.\",\n      \"type\": \"integer\",\n      \"minimum\": 0\n    }\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection2}}/json-schema",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection2}}",
								"json-schema"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						}
					]
				},
				{
					"name": "Get a JSON Schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify namespace name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(pm.variables.get(\"namespace\"));",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Person\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"firstName\": {\n      \"type\": \"string\",\n      \"description\": \"The person'\\''s first name.\"\n    },\n    \"lastName\": {\n      \"type\": \"string\",\n      \"description\": \"The person'\\''s last name.\"\n    },\n    \"age\": {\n      \"description\": \"Age in years which must be equal to or greater than zero.\",\n      \"type\": \"integer\",\n      \"minimum\": 0\n    }\n  }\n}\n"
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection2}}/json-schema",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection2}}",
								"json-schema"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Get collection info",
			"item": [
				{
					"name": "Get all collections from a namespace",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify documents\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(\"Joseph\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections"
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get a collection's JSON schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify documents\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(\"Joseph\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection2}}/json-schema",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection2}}",
								"json-schema"
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Write data",
			"item": [
				{
					"name": "PUT document with documentId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify document is made\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.documentId).exist;",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"stuff\": \"2545331a-aaad-45d2-b084-9da3d8f4c311\",\n  \"other\": \"I need a document with a set value for a test.\"\n}"
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{docid}}",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{docid}}"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "POST document without documentId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify document is made\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.documentId).exist;",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"some-stuff\",\n  \"other\": \"This is nonsensical stuff.\"\n}"
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "POST ONE READER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify document is made\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.documentId).exist;",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reader\": {\n       \"name\": \"Amy Smith\",\n       \"user_id\": \"12346\",\n       \"birthdate\": \"10-01-1980\",\n       \"email\": {\n           \"primary\": \"asmith@gmail.com\",\n           \"secondary\": \"amyispolite@aol.com\"\n       },\n       \"address\": {\n           \"primary\": {\n               \"street\": \"200 Antigone St\",\n               \"city\": \"Nevertown\",\n               \"state\": \"MA\",\n               \"zip-code\": 55555\n           },\n           \"secondary\": {\n               \"street\": \"850 2nd St\",\n               \"city\": \"Evertown\",\n               \"state\": \"MA\",\n               \"zip-code\": 55556\n           }\n       },\n       \"reviews\": [\n           {\n               \"book-title\": \"Moby Dick\", \n               \"rating\": 4, \n               \"review-date\": \"04-25-2002\",\n               \"comment\": \"It was better than I thought.\"\n           },\n           {\n               \"book-title\": \"Pride and Prejudice\", \n               \"rating\": 2, \n               \"review-date\": \"12-02-2002\",\n               \"comment\": \"It was just like the movie.\"\n           }\n       ]\n    }\n}"
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "POST ONE BOOK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify document is made\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.documentId).exist;",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"book\": {\n    \"title\": \"Native Son\",\n    \"isbn\": \"12322\",\n    \"author\": [\n        \"Richard Wright\"\n    ],\n    \"pub-year\": 1930,\n    \"genre\": [\n        \"slavery\",\n        \"action\"\n    ],\n    \"format\": [\n        \"hardback\",\n        \"paperback\",\n        \"epub\"\n    ],\n    \"languages\": [\n        \"English\",\n        \"German\",\n        \"French\"\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{bookdocid}}"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "Get one book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify documents\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(\"Joseph\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{bookdocid}}"
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "POST MULTIPLE READERS with BATCH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify document is made\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.documentId).exist;",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " [{\n     \"reader\": {\n        \"name\": \"Jane Doe\",\n        \"user_id\": \"12345\",\n        \"birthdate\": \"10-01-1980\",\n        \"email\": {\n            \"primary\": \"jdoe@gmail.com\",\n            \"secondary\": \"jane.doe@aol.com\"\n        },\n        \"address\": {\n            \"primary\": {\n                \"street\": \"100 Main St\",\n                \"city\": \"Evertown\",\n                \"state\": \"MA\",\n                \"zip-code\": 55555\n            },\n            \"secondary\": {\n                \"street\": \"850 2nd St\",\n                \"city\": \"Evertown\",\n                \"state\": \"MA\",\n                \"zip-code\": 55556\n            }\n        },\n        \"reviews\": [\n            {\n                \"book-title\": \"Moby Dick\", \n                \"rating\": 3, \n                \"review-date\": \"02-02-2002\",\n                \"comment\": \"It was okay.\"\n            },\n            {\n                \"book-title\": \"Pride and Prejudice\", \n                \"rating\": 5, \n                \"review-date\": \"03-02-2002\",\n                \"comment\": \"It was a wonderful book! I loved reading it.\"\n            }\n        ]\n     }\n  },\n  {\n    \"reader\": {\n       \"name\": \"John Jones\",\n       \"user_id\": \"54321\",\n       \"birthdate\": \"06-11-2000\",\n       \"email\": {\n           \"primary\": \"jjones@gmail.com\",\n           \"secondary\": \"johnnyj@aol.com\"\n       },\n       \"address\": {\n           \"primary\": {\n               \"street\": \"4593 Webster Ave\",\n               \"city\": \"Paradise\",\n               \"state\": \"CA\",\n               \"zip-code\": 95534\n           }\n       },\n       \"reviews\": [\n           {\n               \"book-title\": \"Moby Dick\", \n               \"rating\": 2, \n               \"review-date\": \"03-15-2020\",\n               \"comment\": \"Boring book that I had to read for class.\"\n           },\n           {\n               \"book-title\": \"Pride and Prejudice\", \n               \"rating\": 2, \n               \"review-date\": \"0-02-2020\",\n               \"comment\": \"Another boring book.\"\n           }\n       ]\n    }\n}\n ]"
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/batch",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"batch"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "POST MULTIPLE BOOKS WITH BATCH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify document is made\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.documentId).exist;",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\n     \"book\": {\n         \"title\": \"Moby Dick\",\n         \"isbn\": \"12345\",\n         \"author\": [\n             \"Herman Melville\"\n         ],\n         \"pub-year\": 1899,\n         \"genre\": [\n             \"adventure\",\n             \"ocean\",\n             \"action\"\n         ],\n         \"format\": [\n             \"hardback\",\n             \"paperback\",\n             \"epub\"\n         ],\n         \"languages\": [\n             \"English\",\n             \"German\",\n             \"French\"\n         ]\n     }\n    },\n {\n     \"book\": {\n         \"title\": \"Pride and Prejudice\",\n         \"isbn\": \"45674\",\n         \"author\": [\n             \"Jane Austen\"\n         ],\n         \"pub-year\": 1890,\n         \"genre\": [\n             \"romance\",\n             \"England\",\n             \"regency\"\n         ],\n         \"format\": [\n             \"hardback\",\n             \"paperback\",\n             \"epub\"\n         ],\n         \"languages\": [\n             \"English\",\n             \"Japanese\",\n             \"French\"\n         ]\n     }\n }\n]"
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/batch",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"batch"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "POST MULTIPLE BOOKS with id-path",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify document is made\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.documentId).exist;",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\n     \"id\": \"moby-dick\",\n     \"book\": {\n         \"title\": \"Moby Dick\",\n         \"isbn\": \"12345\",\n         \"author\": [\n             \"Herman Melville\"\n         ],\n         \"pub-year\": 1899,\n         \"genre\": [\n             \"adventure\",\n             \"ocean\",\n             \"action\"\n         ],\n         \"format\": [\n             \"hardback\",\n             \"paperback\",\n             \"epub\"\n         ],\n         \"languages\": [\n             \"English\",\n             \"German\",\n             \"French\"\n         ]\n     }\n    },\n {\n     \"id\": \"pride-and-prejudice\",\n     \"book\": {\n         \"title\": \"Pride and Prejudice\",\n         \"isbn\": \"45674\",\n         \"author\": [\n             \"Jane Austen\"\n         ],\n         \"pub-year\": 1890,\n         \"genre\": [\n             \"romance\",\n             \"England\",\n             \"regency\"\n         ],\n         \"format\": [\n             \"hardback\",\n             \"paperback\",\n             \"epub\"\n         ],\n         \"languages\": [\n             \"English\",\n             \"Japanese\",\n             \"French\"\n         ]\n     }\n }\n]"
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/batch?id-path=book",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"batch"
							],
							"query": [
								{
									"key": "id-path",
									"value": "book"
								}
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "POST ONE READER WITH DOCUMENT-ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify document is made\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.documentId).exist;",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n     \"reader\": {\n        \"name\": \"John Smith\",\n        \"user_id\": \"12346\",\n        \"birthdate\": \"11-01-1992\",\n        \"email\": {\n            \"primary\": \"jsmith@gmail.com\",\n            \"secondary\": \"john.smith@aol.com\"\n        },\n        \"address\": {\n            \"primary\": {\n                \"street\": \"200 Z St\",\n                \"city\": \"Evertown\",\n                \"state\": \"MA\",\n                \"zip-code\": 55555\n            },\n            \"secondary\": {\n                \"street\": \"850 2nd St\",\n                \"city\": \"Evertown\",\n                \"state\": \"MA\",\n                \"zip-code\": 55556\n            }\n        },\n        \"reviews\": [\n            {\n                \"book-title\": \"Moby Dick\", \n                \"rating\": 3, \n                \"review-date\": \"02-02-2002\",\n                               \"comment\": \"It was okay.\"\n            },\n            {\n                \"book-title\": \"Pride and Prejudice\", \n                \"rating\": 5, \n                \"review-date\": \"03-02-2002\",\n                \"comment\": \"It was a wonderful book! I loved reading it.\"\n            }\n        ]\n     }\n }"
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{readerdocid}}",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{readerdocid}}"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Decorations for writing - TTL and profiling",
			"item": [
				{
					"name": "Profiling",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"yet-another-field\": \"Hopefully, I haven't lost my other two fields!\",\n\"choices\": [\n    \"eeny\",\n    \"meeny\", \n    \"meinly\",\n    \"mo\"\n]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{docid}}?profile=true",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{docid}}"
							],
							"query": [
								{
									"key": "profile",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Profiling",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{docid}}",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{docid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT TTL",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"okaydokie\": \"Now I have done it! We have a TTL at last!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{docid}}?ttl=10000",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{docid}}"
							],
							"query": [
								{
									"key": "ttl",
									"value": "10000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TTL",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{docid}}",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{docid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Write data with document-path",
			"item": [
				{
					"name": "PUT ONE BOOK WITH DOCUMENT-PATH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify document is made\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.documentId).exist;",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"title\": \"Native Daughter\" }"
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}/book",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{bookdocid}}",
								"book"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "PATCH ONE BOOK WITH DOCUMENT-PATH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify document is made\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.documentId).exist;",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"book\": {\n    \"title\": \"Native Daughter\",\n    \"isbn\": \"12322\",\n    \"author\": [\n        \"Richard Wright\"\n    ],\n    \"pub-year\": 1930,\n    \"genre\": [\n        \"slavery\",\n        \"action\"\n    ],\n    \"format\": [\n        \"hardback\",\n        \"paperback\",\n        \"epub\"\n    ],\n    \"languages\": [\n        \"English\",\n        \"German\",\n        \"French\"\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}/book",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{bookdocid}}",
								"book"
							]
						}
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Functions",
			"item": [
				{
					"name": "Get built-in functions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_schema}}/{{namespace}}/functions",
							"host": [
								"{{base_doc_url}}{{base_doc_schema}}"
							],
							"path": [
								"{{namespace}}",
								"functions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Push an item onto the genre array",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"operation\": \"$push\", \"value\": \"culture\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}/book/genre/function",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{bookdocid}}",
								"book",
								"genre",
								"function"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get state of the array genre",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}/book/genre",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{bookdocid}}",
								"book",
								"genre"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pop an item off of the genre array",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"operation\": \"$pop\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}/book/genre/function",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{bookdocid}}",
								"book",
								"genre",
								"function"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get state of the array genre again",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}/book/genre",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{bookdocid}}",
								"book",
								"genre"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get all docs in a collection",
			"item": [
				{
					"name": "Get all documents in a collection",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							]
						}
					},
					"response": [
						{
							"name": "Get all documents in a collection",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Cassandra-Token",
										"value": "{{AUTH_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}",
									"host": [
										"{{base_doc_url}}{{base_doc_api}}"
									],
									"path": [
										"{{namespace}}",
										"collections",
										"{{collection}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 07 Jul 2022 22:56:38 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Content-Length",
									"value": "600"
								}
							],
							"cookie": [],
							"body": "{\n    \"pageState\": \"Bk1hcnRoYQDwf_____B_____\",\n    \"data\": {\n        \"c3e95c8d-19de-4405-9fb7-76074648ec56\": {\n            \"book\": {\n                \"author\": [\n                    \"Julia Child\",\n                    \"Simone Beck\",\n                    \"Louisette Bertholle\"\n                ],\n                \"format\": [\n                    \"hardback\",\n                    \"paperback\",\n                    \"epub\"\n                ],\n                \"genre\": [\n                    \"cooking\",\n                    \"French cuisine\"\n                ],\n                \"isbn\": \"19922\",\n                \"languages\": [\n                    \"English\",\n                    \"German\",\n                    \"French\",\n                    \"Belgian\"\n                ],\n                \"pub-year\": 1960,\n                \"title\": \"The Art of French Cooking\"\n            }\n        },\n        \"512ffc47-1af3-4efb-a88d-3c6fdb854708\": {\n            \"reader\": {\n                \"address\": {\n                    \"primary\": {\n                        \"city\": \"Paradise\",\n                        \"state\": \"CA\",\n                        \"street\": \"4593 Webster Ave\",\n                        \"zip-code\": 95534\n                    }\n                },\n                \"birthdate\": \"06-11-2000\",\n                \"email\": {\n                    \"primary\": \"jjones@gmail.com\",\n                    \"secondary\": \"johnnyj@aol.com\"\n                },\n                \"name\": \"John Jones\",\n                \"reviews\": [\n                    {\n                        \"book-title\": \"Moby Dick\",\n                        \"comment\": \"Boring book that I had to read for class.\",\n                        \"rating\": 2,\n                        \"review-date\": \"03-15-2020\"\n                    },\n                    {\n                        \"book-title\": \"Pride and Prejudice\",\n                        \"comment\": \"Another boring book.\",\n                        \"rating\": 2,\n                        \"review-date\": \"0-02-2020\"\n                    }\n                ],\n                \"user_id\": \"54321\"\n            }\n        },\n        \"Martha\": {\n            \"firstname\": \"Martha\",\n            \"lastname\": \"Smith\",\n            \"weights\": {\n                \"reps\": 12,\n                \"type\": \"bench press\",\n                \"weight\": 125\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get 6 documents from library collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify documents\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(\"Joseph\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?page-size=6",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "page-size",
									"value": "6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection with page-size",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?page-size=5",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "page-size",
									"value": "5"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get all documents in a collection with page-size",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Cassandra-Token",
										"value": "{{AUTH_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?page-size=5",
									"host": [
										"{{base_doc_url}}{{base_doc_api}}"
									],
									"path": [
										"{{namespace}}",
										"collections",
										"{{collection}}"
									],
									"query": [
										{
											"key": "page-size",
											"value": "5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 07 Jul 2022 23:00:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Content-Length",
									"value": "791"
								}
							],
							"cookie": [],
							"body": "{\n    \"pageState\": \"JDI1NDUzMzFhLWFhYWQtNDVkMi1iMDg0LTlkYTNkOGY0YzMxMQDwf_____B_____\",\n    \"data\": {\n        \"c3e95c8d-19de-4405-9fb7-76074648ec56\": {\n            \"book\": {\n                \"author\": [\n                    \"Julia Child\",\n                    \"Simone Beck\",\n                    \"Louisette Bertholle\"\n                ],\n                \"format\": [\n                    \"hardback\",\n                    \"paperback\",\n                    \"epub\"\n                ],\n                \"genre\": [\n                    \"cooking\",\n                    \"French cuisine\"\n                ],\n                \"isbn\": \"19922\",\n                \"languages\": [\n                    \"English\",\n                    \"German\",\n                    \"French\",\n                    \"Belgian\"\n                ],\n                \"pub-year\": 1960,\n                \"title\": \"The Art of French Cooking\"\n            }\n        },\n        \"512ffc47-1af3-4efb-a88d-3c6fdb854708\": {\n            \"reader\": {\n                \"address\": {\n                    \"primary\": {\n                        \"city\": \"Paradise\",\n                        \"state\": \"CA\",\n                        \"street\": \"4593 Webster Ave\",\n                        \"zip-code\": 95534\n                    }\n                },\n                \"birthdate\": \"06-11-2000\",\n                \"email\": {\n                    \"primary\": \"jjones@gmail.com\",\n                    \"secondary\": \"johnnyj@aol.com\"\n                },\n                \"name\": \"John Jones\",\n                \"reviews\": [\n                    {\n                        \"book-title\": \"Moby Dick\",\n                        \"comment\": \"Boring book that I had to read for class.\",\n                        \"rating\": 2,\n                        \"review-date\": \"03-15-2020\"\n                    },\n                    {\n                        \"book-title\": \"Pride and Prejudice\",\n                        \"comment\": \"Another boring book.\",\n                        \"rating\": 2,\n                        \"review-date\": \"0-02-2020\"\n                    }\n                ],\n                \"user_id\": \"54321\"\n            }\n        },\n        \"Martha\": {\n            \"firstname\": \"Martha\",\n            \"lastname\": \"Smith\",\n            \"weights\": {\n                \"reps\": 12,\n                \"type\": \"bench press\",\n                \"weight\": 125\n            }\n        },\n        \"8297a92b-7539-4c88-833b-5b54107895d2\": {\n            \"book\": {\n                \"author\": [\n                    \"Herman Melville\"\n                ],\n                \"format\": [\n                    \"hardback\",\n                    \"paperback\",\n                    \"epub\"\n                ],\n                \"genre\": [\n                    \"adventure\",\n                    \"ocean\",\n                    \"action\"\n                ],\n                \"isbn\": \"12345\",\n                \"languages\": [\n                    \"English\",\n                    \"German\",\n                    \"French\"\n                ],\n                \"pub-year\": 1899,\n                \"title\": \"Moby Dick\"\n            }\n        },\n        \"2545331a-aaad-45d2-b084-9da3d8f4c311\": {\n            \"other\": \"I need a document with a set value for a test.\",\n            \"stuff\": \"2545331a-aaad-45d2-b084-9da3d8f4c311\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection with page-state",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?page-state=JGQwODFlYmIyLTQ4OWUtNDI1ZS04NTI1LWEyNTU4NGY0N2JjZADwf_____B_____",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "page-state",
									"value": "JGQwODFlYmIyLTQ4OWUtNDI1ZS04NTI1LWEyNTU4NGY0N2JjZADwf_____B_____"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get all documents in a collection with page-size",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Cassandra-Token",
										"value": "{{AUTH_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?page-size=5",
									"host": [
										"{{base_doc_url}}{{base_doc_api}}"
									],
									"path": [
										"{{namespace}}",
										"collections",
										"{{collection}}"
									],
									"query": [
										{
											"key": "page-size",
											"value": "5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 07 Jul 2022 23:00:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Content-Length",
									"value": "791"
								}
							],
							"cookie": [],
							"body": "{\n    \"pageState\": \"JDI1NDUzMzFhLWFhYWQtNDVkMi1iMDg0LTlkYTNkOGY0YzMxMQDwf_____B_____\",\n    \"data\": {\n        \"c3e95c8d-19de-4405-9fb7-76074648ec56\": {\n            \"book\": {\n                \"author\": [\n                    \"Julia Child\",\n                    \"Simone Beck\",\n                    \"Louisette Bertholle\"\n                ],\n                \"format\": [\n                    \"hardback\",\n                    \"paperback\",\n                    \"epub\"\n                ],\n                \"genre\": [\n                    \"cooking\",\n                    \"French cuisine\"\n                ],\n                \"isbn\": \"19922\",\n                \"languages\": [\n                    \"English\",\n                    \"German\",\n                    \"French\",\n                    \"Belgian\"\n                ],\n                \"pub-year\": 1960,\n                \"title\": \"The Art of French Cooking\"\n            }\n        },\n        \"512ffc47-1af3-4efb-a88d-3c6fdb854708\": {\n            \"reader\": {\n                \"address\": {\n                    \"primary\": {\n                        \"city\": \"Paradise\",\n                        \"state\": \"CA\",\n                        \"street\": \"4593 Webster Ave\",\n                        \"zip-code\": 95534\n                    }\n                },\n                \"birthdate\": \"06-11-2000\",\n                \"email\": {\n                    \"primary\": \"jjones@gmail.com\",\n                    \"secondary\": \"johnnyj@aol.com\"\n                },\n                \"name\": \"John Jones\",\n                \"reviews\": [\n                    {\n                        \"book-title\": \"Moby Dick\",\n                        \"comment\": \"Boring book that I had to read for class.\",\n                        \"rating\": 2,\n                        \"review-date\": \"03-15-2020\"\n                    },\n                    {\n                        \"book-title\": \"Pride and Prejudice\",\n                        \"comment\": \"Another boring book.\",\n                        \"rating\": 2,\n                        \"review-date\": \"0-02-2020\"\n                    }\n                ],\n                \"user_id\": \"54321\"\n            }\n        },\n        \"Martha\": {\n            \"firstname\": \"Martha\",\n            \"lastname\": \"Smith\",\n            \"weights\": {\n                \"reps\": 12,\n                \"type\": \"bench press\",\n                \"weight\": 125\n            }\n        },\n        \"8297a92b-7539-4c88-833b-5b54107895d2\": {\n            \"book\": {\n                \"author\": [\n                    \"Herman Melville\"\n                ],\n                \"format\": [\n                    \"hardback\",\n                    \"paperback\",\n                    \"epub\"\n                ],\n                \"genre\": [\n                    \"adventure\",\n                    \"ocean\",\n                    \"action\"\n                ],\n                \"isbn\": \"12345\",\n                \"languages\": [\n                    \"English\",\n                    \"German\",\n                    \"French\"\n                ],\n                \"pub-year\": 1899,\n                \"title\": \"Moby Dick\"\n            }\n        },\n        \"2545331a-aaad-45d2-b084-9da3d8f4c311\": {\n            \"other\": \"I need a document with a set value for a test.\",\n            \"stuff\": \"2545331a-aaad-45d2-b084-9da3d8f4c311\"\n        }\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Get docs in a collection with WHERE",
			"item": [
				{
					"name": "Get all documents in a collection WHERE reader.name eq Amy Smith",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"reader.name\":{\"$eq\":\"Amy Smith\"}}",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"reader.name\":{\"$eq\":\"Amy Smith\"}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection WHERE reader.name eq Amy Smith, with fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"reader.name\":{\"$eq\":\"Amy Smith\"}}&fields=[\"reader.name\", \"reader.birthdate\"]",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"reader.name\":{\"$eq\":\"Amy Smith\"}}"
								},
								{
									"key": "fields",
									"value": "[\"reader.name\", \"reader.birthdate\"]"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection WHERE reader.name ne Amy Smith using multiple WHERE on same field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"reader.name\":{\"$ne\":\"Amy Smith\",\"$exists\": true}}&fields=[\"reader.name\",\"reader.user_id\"]&page-size=6",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"reader.name\":{\"$ne\":\"Amy Smith\",\"$exists\": true}}"
								},
								{
									"key": "fields",
									"value": "[\"reader.name\",\"reader.user_id\"]"
								},
								{
									"key": "page-size",
									"value": "6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection WHERE reader.name ne Amy Smith, using $and in WHERE, with fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"$and\":[{\"reader.name\":{\"$ne\":\"Amy Smith\"}},{\"reader.name\":{\"$exists\": true}}]}&fields=[\"reader.name\",\"reader.user_id\"]&page-size=6",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"$and\":[{\"reader.name\":{\"$ne\":\"Amy Smith\"}},{\"reader.name\":{\"$exists\": true}}]}"
								},
								{
									"key": "fields",
									"value": "[\"reader.name\",\"reader.user_id\"]"
								},
								{
									"key": "page-size",
									"value": "6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection WHERE reader.name eq Amy Smith $OR Jane Doe in WHERE, with fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"$or\":[{\"reader.name\":{\"$eq\":\"Amy%20Smith\"}},{\"reader.name\":{\"$eq\":\"Jane%20Doe\"}}]}&fields=[\"reader.name\",\"reader.user_id\",\"reader.birthdate\"]&page-size=6",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"$or\":[{\"reader.name\":{\"$eq\":\"Amy%20Smith\"}},{\"reader.name\":{\"$eq\":\"Jane%20Doe\"}}]}"
								},
								{
									"key": "fields",
									"value": "[\"reader.name\",\"reader.user_id\",\"reader.birthdate\"]"
								},
								{
									"key": "page-size",
									"value": "6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection WHERE reader.name eq Amy Smith $NOT Jane Doe in WHERE, with fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"$not\":{\"book.title\":{\"$eq\":\"Moby%20Dick\"}}}&fields=[\"book.title\",\"book.authors\"]&page-size=6",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"$not\":{\"book.title\":{\"$eq\":\"Moby%20Dick\"}}}"
								},
								{
									"key": "fields",
									"value": "[\"book.title\",\"book.authors\"]"
								},
								{
									"key": "page-size",
									"value": "6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection WHERE reader rates a book as gt 3 and lte 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"reader.reviews.[*].rating\":{\"$gt\":3,\"$lte\":5}}&fields=[\"reader.name\",\"reader.reviews.rating\",\"reader.reviews\"]&page-size=6",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"reader.reviews.[*].rating\":{\"$gt\":3,\"$lte\":5}}"
								},
								{
									"key": "fields",
									"value": "[\"reader.name\",\"reader.reviews.rating\",\"reader.reviews\"]"
								},
								{
									"key": "page-size",
									"value": "6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection WHERE 2 readers are $in",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"reader.name\":{\"$in\":[\"Jane%20Doe\",\"Amy%20Smith\"]}}&fields=[\"reader.name\",\"reader.birthdate\",\"reader.reviews\"]&page-size=6",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"reader.name\":{\"$in\":[\"Jane%20Doe\",\"Amy%20Smith\"]}}"
								},
								{
									"key": "fields",
									"value": "[\"reader.name\",\"reader.birthdate\",\"reader.reviews\"]"
								},
								{
									"key": "page-size",
									"value": "6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection WHERE 2 readers are $in, but one fails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"reader.name\":{\"$in\":[\"Jane%20Doe\",\"John%20Smith\"]}}&fields=[\"reader.name\",\"reader.address\",\"reader.reviews\"]&page-size=6",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"reader.name\":{\"$in\":[\"Jane%20Doe\",\"John%20Smith\"]}}"
								},
								{
									"key": "fields",
									"value": "[\"reader.name\",\"reader.address\",\"reader.reviews\"]"
								},
								{
									"key": "page-size",
									"value": "6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection WHERE 2 readers are $nin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"reader.name\":{\"$nin\":[\"Jane%20Doe\",\"Amy%20Smith\"]}}&fields=[\"reader.name\",\"reader.birthdate\",\"reader.reviews\"]&page-size=6",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"reader.name\":{\"$nin\":[\"Jane%20Doe\",\"Amy%20Smith\"]}}"
								},
								{
									"key": "fields",
									"value": "[\"reader.name\",\"reader.birthdate\",\"reader.reviews\"]"
								},
								{
									"key": "page-size",
									"value": "6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection WHERE reader.address.primary,secondary.city equals a value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"reader.address.primary,secondary.city\":{\"$eq\":\"Evertown\"}}&fields=[\"reader.name\", \"reader.address\",\"reader.reviews\"]",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"reader.address.primary,secondary.city\":{\"$eq\":\"Evertown\"}}"
								},
								{
									"key": "fields",
									"value": "[\"reader.name\", \"reader.address\",\"reader.reviews\"]"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get all documents in a collection WHERE book title eq a particular book in reader.reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"reader.reviews.[*].book-title\":{\"$eq\":\"Moby%20Dick\",\"$exists\": true}}&fields=[\"reader.name\",\"reader.reviews\"]&page-size=6",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"reader.reviews.[*].book-title\":{\"$eq\":\"Moby%20Dick\",\"$exists\": true}}"
								},
								{
									"key": "fields",
									"value": "[\"reader.name\",\"reader.reviews\"]"
								},
								{
									"key": "page-size",
									"value": "6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "DOES NOT WORK Get all documents in a collection WHERE an array value equals a particular value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify Janet\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(pm.variables.get(\"user2a\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}?where={\"book.genre.[*]\":{\"$eq\":\"romance\"}} DOES NOT WORK",
							"host": [
								"{{base_rest_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}"
							],
							"query": [
								{
									"key": "fields",
									"value": "[\"book.title\",\"book.genre\"]",
									"disabled": true
								},
								{
									"key": "where",
									"value": "{\"book.genre.[*]\":{\"$eq\":\"romance\"}} DOES NOT WORK"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Get an identified document with info",
			"item": [
				{
					"name": "Get a single document in a collection",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{bookdocid}}"
							]
						}
					},
					"response": [
						{
							"name": "Get a single document in a collection",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Cassandra-Token",
										"value": "{{AUTH_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{docid}}",
									"host": [
										"{{base_doc_url}}{{base_doc_api}}"
									],
									"path": [
										"{{namespace}}",
										"collections",
										"{{collection}}",
										"{{docid}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 07 Jul 2022 22:58:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Length",
									"value": "166"
								}
							],
							"cookie": [],
							"body": "{\n    \"documentId\": \"2545331a-aaad-45d2-b084-9da3d8f4c311\",\n    \"data\": {\n        \"other\": \"I need a document with a set value for a test.\",\n        \"stuff\": \"2545331a-aaad-45d2-b084-9da3d8f4c311\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get a single document with fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}?fields=[\"book.title\",\"book.genre\"]",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{bookdocid}}"
							],
							"query": [
								{
									"key": "fields",
									"value": "[\"book.title\",\"book.genre\"]"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get all documents in a collection with fields",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Cassandra-Token",
										"value": "{{AUTH_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}?fields=[\"book.title\",\"book.genre\"]",
									"host": [
										"{{base_doc_url}}{{base_doc_api}}"
									],
									"path": [
										"{{namespace}}",
										"collections",
										"{{collection}}",
										"{{bookdocid}}"
									],
									"query": [
										{
											"key": "fields",
											"value": "[\"book.title\",\"book.genre\"]"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 07 Jul 2022 23:02:45 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Length",
									"value": "102"
								}
							],
							"cookie": [],
							"body": "{\n    \"documentId\": \"native-son-doc-id\",\n    \"data\": {\n        \"book\": {\n            \"genre\": [\n                \"slavery\",\n                \"action\"\n            ],\n            \"title\": \"Native Son\"\n        }\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Read data with document-path",
			"item": [
				{
					"name": "Get a path in a particular document",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify documents\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(\"Joseph\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}/book/genre",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{bookdocid}}",
								"book",
								"genre"
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get an array in a path in a particular document with a document-path",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify documents\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(\"Joseph\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{readerdocid}}/reader/reviews/[1]",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{readerdocid}}",
								"reader",
								"reviews",
								"[1]"
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Get an array in a path in a particular document with a document-path",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify documents\", function () {",
									"    var jsonData = pm.response.json();",
									"    // fix next line",
									"    pm.expect(jsonData.data.Joey.firstname).to.eql(\"Joseph\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{readerdocid}}/reader/reviews?WHERE={\"reader.reviews.rating\":{\"$eq\":5}",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{readerdocid}}",
								"reader",
								"reviews"
							],
							"query": [
								{
									"key": "WHERE",
									"value": "{\"reader.reviews.rating\":{\"$eq\":5}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "delete data",
			"item": [
				{
					"name": "Delete a doc-path from a document",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{readerdocid}}/reader/address/secondary",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{readerdocid}}",
								"reader",
								"address",
								"secondary"
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Delete document from collection",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{bookdocid}}",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{bookdocid}}"
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Delete document with WHERE",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection}}/{{docid}}?where={ \"id\":{\"$eq\":\"some stuff\"}}",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection}}",
								"{{docid}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{ \"id\":{\"$eq\":\"some stuff\"}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				},
				{
					"name": "Delete collection library2",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_doc_url}}{{base_doc_api}}/{{namespace}}/collections/{{collection2}}",
							"host": [
								"{{base_doc_url}}{{base_doc_api}}"
							],
							"path": [
								"{{namespace}}",
								"collections",
								"{{collection2}}"
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "delete schema",
			"item": [
				{
					"name": "Delete namespaces test (Stargate OSS only)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_rest_url}}{{base_doc_schema}}/{{namespace}}",
							"host": [
								"{{base_rest_url}}{{base_doc_schema}}"
							],
							"path": [
								"{{namespace}}"
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"killrvideo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"killrvideo\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}