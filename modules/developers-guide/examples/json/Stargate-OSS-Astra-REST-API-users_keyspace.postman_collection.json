{
	"info": {
		"_postman_id": "cd7975de-4369-4a0f-81d3-9ade8e20ebe1",
		"name": "Stargate-OSS-Astra-REST-API:users_keyspace",
		"description": "Sample schema and queries for Stargate's REST API using:\n\nkeyspace: users_keyspace\ntable: users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "authenticate",
			"item": [
				{
					"name": "Create a auth token (Stargate OSS only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72d6c065-9324-4958-b5c6-e316bcad520e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"AUTH_TOKEN\", jsonData.authToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{auth_username}}\",\n    \"password\": \"{{auth_password}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_auth_url}}/{{base_auth_api_path}}",
							"host": [
								"{{base_auth_url}}"
							],
							"path": [
								"{{base_auth_api_path}}"
							],
							"query": [
								{
									"key": "username",
									"value": "cassandra",
									"disabled": true
								},
								{
									"key": "password",
									"value": "cassandra",
									"disabled": true
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "create schema",
			"item": [
				{
					"name": "Create a simple keyspace users_keyspace (Stargate OSS only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4bc368bc-ef4e-4cde-a568-c8c5141e5f2b",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify keyspace name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(pm.variables.get(\"rkeyspace\"));",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{rkeyspace}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces"
					},
					"response": []
				},
				{
					"name": "Create a keyspace with replica set to 1 (Stargate OSS only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfac7a0f-639f-46c0-832e-869da4bf3ae3",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify keyspace name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(pm.variables.get(\"rkeyspace\"));",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{rkeyspace}}\",\n    \"replicas\": 1\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces\n\n{\n    \"name\": \"users_keyspace\",\n    \"replicas\": 1\n}"
					},
					"response": []
				},
				{
					"name": "Create a keyspace users_keyspace_dcs with DCs  (Stargate OSS only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee44ed94-9b90-4662-ad45-f736a0334a49",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify keyspace name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"users_keyspace_dcs\";",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"users_keyspace_dcs\",\n    \"datacenters\": [ {\"name\": \"dc1\"}, {\"name\": \"dc2\", \"replicas\": 5} ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces\n\n{\n    \"name\": \"users_keyspace_dcs\",\n    \"datacenters\": [ {\"name\": \"dc1\"}, {\"name\": \"dc2\", \"replicas\": 5} ]\n}"
					},
					"response": []
				},
				{
					"name": "GQL: Create a user-defined type (UDT) called address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e34b753-748c-463b-b583-a3f67d79dda5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify udt name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.createType).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"type": "text",
								"value": "{{AUTH_TOKEN}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createAddressUDT {\n  createType(\n    keyspaceName: \"{{rkeyspace}}\"\n    typeName: \"address_type\"\n    fields: [\n      { name: \"street\", type: { basic: TEXT } }\n      { name: \"city\", type: { basic: TEXT } }\n      { name: \"state\", type: { basic: TEXT } }\n      { name: \"zip\", type: { basic: TEXT } }\n    ]\n  )\n}",
								"variables": ""
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{gql_base_url}}{{gql_base_schema}}",
							"host": [
								"{{gql_base_url}}{{gql_base_schema}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a table users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b6ea644-ab28-4363-9241-5f0076d3a10a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify table name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(pm.variables.get(\"rtable\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{rtable}}\",\n    \"columnDefinitions\": [\n        {\n            \"name\": \"firstname\",\n            \"typeDefinition\": \"text\"\n        },\n        {\n            \"name\": \"lastname\",\n            \"typeDefinition\": \"text\"\n        },\n        {\n            \"name\": \"favorite_color\",\n            \"typeDefinition\": \"text\"\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"firstname\"\n        ],\n        \"clusteringKey\": [\n            \"lastname\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"lastname\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables"
							],
							"query": [
								{
									"key": "pretty",
									"value": "<boolean>",
									"description": "format results",
									"disabled": true
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables\n\n{\n        \"name\": \"users\",\n        \"columnDefinitions\":\n          [\n        {\n              \"name\": \"firstname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"lastname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"favorite color\",\n              \"typeDefinition\": \"text\"\n            }\n          ],\n        \"primaryKey\":\n          {\n            \"partitionKey\": [\"firstname\"],\n            \"clusteringKey\": [\"lastname\"]\n          },\n        \"tableOptions\":\n          {\n            \"defaultTimeToLive\": 0,\n            \"clusteringExpression\":\n              [{ \"column\": \"lastname\", \"order\": \"ASC\" }]\n          }\n }"
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"users\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "Create a column email (TEXT)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84b0b766-fa34-4675-ac77-7d36ab523416",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify table name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"email\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \n   \"name\": \"email\",  \n   \"typeDefinition\": \"text\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/columns",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"columns"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns\n\n{  \n   \"name\": \"email\",  \n   \"typeDefinition\": \"text\"\n}"
					},
					"response": []
				},
				{
					"name": "Create a column  favorite_books (SET)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14819726-9fdc-438a-9b17-c9a7fba44867",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify table name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"favorite_books\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"connection": true,
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"favorite_books\",\n   \"typeDefinition\": \"set<text>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/columns",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"columns"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns\n\n{\n   \"name\": \"favorite_books\",\n   \"typeDefinition\": \"set<text>\"\n}"
					},
					"response": []
				},
				{
					"name": "Create a column top_three_tv_shows (LIST)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a6854a75-7a22-4153-aad2-2a3a6fff56ee",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify column name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('top_three_tv_shows');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"top_three_tv_shows\",\n   \"typeDefinition\": \"list<text>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/columns",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"columns"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns\n\n{\n   \"name\": \"top_three_tv_shows\",\n   \"typeDefinition\": \"list<text>\"\n}"
					},
					"response": []
				},
				{
					"name": "Create a column evaluations (MAP)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7fe1decf-936b-4cb8-a60d-273fc8b8eed1",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify column name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('evaluations');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"connection": true,
							"accept-encoding": true,
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"evaluations\",\n   \"typeDefinition\": \"map<int,text>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/columns",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"columns"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns\n\n{\n   \"name\": \"evaluations\",\n   \"typeDefinition\": \"map<int,text>\"\n}"
					},
					"response": []
				},
				{
					"name": "Create a column current_country (TUPLE)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7379185-818e-4a4e-8d90-621ce5ba4da4",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify column name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('current_country');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"current_country\",\n   \"typeDefinition\": \"tuple<text, date, date>\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/columns",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"columns"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns\n\n{\n   \"name\": \"current_country\",\n   \"typeDefinition\": \"tuple<text, date, date>\"\n}"
					},
					"response": []
				},
				{
					"name": "Create a column address (UDT)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "82cd17fa-b672-45d5-9d5a-94d40ab32667",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify column name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('address');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"address\",\n   \"typeDefinition\": \"address_type\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/columns",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"columns"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns\n\n{\n   \"name\": \"current_country\",\n   \"typeDefinition\": \"tuple<text, date, date>\"\n}"
					},
					"response": []
				},
				{
					"name": "Change the column firstname to first",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f089ff0-4886-4bf3-b060-0cfc35f15a03",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify column name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('first');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"name\": \"first\",\n      \"typeDefinition\": \"varchar\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/columns/:colname",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"columns",
								":colname"
							],
							"variable": [
								{
									"key": "colname",
									"value": "firstname"
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns\n\n{\n   \"name\": \"current_country\",\n   \"typeDefinition\": \"tuple<text, date, date>\"\n}"
					},
					"response": []
				},
				{
					"name": "Change the column first back to firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d30cff53-b2ec-47ac-b30c-6951ab987790",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify column name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('firstname');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"name\": \"firstname\",\n      \"typeDefinition\": \"varchar\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/columns/:newcolname",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"columns",
								":newcolname"
							],
							"variable": [
								{
									"key": "newcolname",
									"value": "first"
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns\n\n{\n   \"name\": \"current_country\",\n   \"typeDefinition\": \"tuple<text, date, date>\"\n}"
					},
					"response": []
				},
				{
					"name": "Change the table definition",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "87fcaa5b-5422-4cec-a1f3-5ba21a260d2a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify column name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(pm.variables.get(\"rtable\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{rtable}}\",\n    \"columnDefinitions\": [\n        {\n            \"name\": \"firstname\",\n            \"typeDefinition\": \"text\"\n        },\n        {\n            \"name\": \"lastname\",\n            \"typeDefinition\": \"text\"\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"firstname\"\n        ],\n        \"clusteringKey\": [\n            \"lastname\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns\n\n{\n   \"name\": \"current_country\",\n   \"typeDefinition\": \"tuple<text, date, date>\"\n}"
					},
					"response": []
				},
				{
					"name": "Change the table definition back again",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bddd496b-da80-483a-9f55-28ad6eafc23a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify column name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(pm.variables.get('rtable'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{rtable}}\",\n    \"columnDefinitions\": [\n        {\n            \"name\": \"firstname\",\n            \"typeDefinition\": \"text\"\n        },\n        {\n            \"name\": \"lastname\",\n            \"typeDefinition\": \"text\"\n        },\n        {\n            \"name\": \"favorite_color\",\n            \"typeDefinition\": \"text\"\n        },\n        {\n            \"name\": \"email\",\n            \"typeDefinition\": \"text\"\n        },\n        {\n            \"name\": \"fapvorite_books\",\n            \"typeDefinition\": \"set<text>\"\n        },\n        {\n            \"name\": \"top_three_tv_shows\",\n            \"typeDefinition\": \"list<text>\"\n        },\n        {\n            \"name\": \"evaluations\",\n            \"typeDefinition\": \"map<int,text>\"\n        },\n        {\n            \"name\": \"current_country\",\n            \"typeDefinition\": \"tuple<text, date, date>\"\n        },\n        {\n            \"name\": \"address\",\n            \"typeDefinition\": \"address_type\"\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"firstname\"\n        ],\n        \"clusteringKey\": [\n            \"lastname\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0\n    }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns\n\n{\n   \"name\": \"current_country\",\n   \"typeDefinition\": \"tuple<text, date, date>\"\n}"
					},
					"response": []
				},
				{
					"name": "Create a table index fav_books_idx (SET)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77a9a923-4685-43fb-a909-84f9f9ecf1c6",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify table name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"column\": \"favorite_books\",\n    \"name\": \"fav_books_idx\",\n    \"ifNotExists\": true\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/indexes",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"indexes"
							],
							"query": [
								{
									"key": "pretty",
									"value": "<boolean>",
									"description": "format results",
									"disabled": true
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables\n\n{\n        \"name\": \"users\",\n        \"columnDefinitions\":\n          [\n        {\n              \"name\": \"firstname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"lastname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"favorite color\",\n              \"typeDefinition\": \"text\"\n            }\n          ],\n        \"primaryKey\":\n          {\n            \"partitionKey\": [\"firstname\"],\n            \"clusteringKey\": [\"lastname\"]\n          },\n        \"tableOptions\":\n          {\n            \"defaultTimeToLive\": 0,\n            \"clusteringExpression\":\n              [{ \"column\": \"lastname\", \"order\": \"ASC\" }]\n          }\n }"
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"users\"\n}"
						}
					]
				},
				{
					"name": "Create table index tv_idx (LIST)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac524e1f-bbd3-46a7-984d-4f74ceaf401e",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify table name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"column\": \"top_three_tv_shows\",\n  \"name\": \"tv_idx\",\n  \"ifNotExists\": true\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/indexes",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"indexes"
							],
							"query": [
								{
									"key": "pretty",
									"value": "<boolean>",
									"description": "format results",
									"disabled": true
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables\n\n{\n        \"name\": \"users\",\n        \"columnDefinitions\":\n          [\n        {\n              \"name\": \"firstname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"lastname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"favorite color\",\n              \"typeDefinition\": \"text\"\n            }\n          ],\n        \"primaryKey\":\n          {\n            \"partitionKey\": [\"firstname\"],\n            \"clusteringKey\": [\"lastname\"]\n          },\n        \"tableOptions\":\n          {\n            \"defaultTimeToLive\": 0,\n            \"clusteringExpression\":\n              [{ \"column\": \"lastname\", \"order\": \"ASC\" }]\n          }\n }"
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"users\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						}
					]
				},
				{
					"name": "Create table index evalv_idx (VALUES)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4345b626-3681-4bec-b6ec-32d4968a29ad",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify table name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"column\": \"evaluations\",\n  \"name\": \"evalv_idx\",\n  \"ifNotExists\": true\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/indexes",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"indexes"
							],
							"query": [
								{
									"key": "pretty",
									"value": "<boolean>",
									"description": "format results",
									"disabled": true
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables\n\n{\n        \"name\": \"users\",\n        \"columnDefinitions\":\n          [\n        {\n              \"name\": \"firstname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"lastname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"favorite color\",\n              \"typeDefinition\": \"text\"\n            }\n          ],\n        \"primaryKey\":\n          {\n            \"partitionKey\": [\"firstname\"],\n            \"clusteringKey\": [\"lastname\"]\n          },\n        \"tableOptions\":\n          {\n            \"defaultTimeToLive\": 0,\n            \"clusteringExpression\":\n              [{ \"column\": \"lastname\", \"order\": \"ASC\" }]\n          }\n }"
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"users\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						}
					]
				},
				{
					"name": "Create table index evalk_idx (KEYS)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b98d230f-b640-47e2-9a5d-79c85609ce0e",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify table name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"column\": \"evaluations\",\n  \"name\": \"evalk_idx\",\n  \"kind\": \"KEYS\",\n  \"ifNotExists\": true\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/indexes",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"indexes"
							],
							"query": [
								{
									"key": "pretty",
									"value": "<boolean>",
									"description": "format results",
									"disabled": true
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables\n\n{\n        \"name\": \"users\",\n        \"columnDefinitions\":\n          [\n        {\n              \"name\": \"firstname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"lastname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"favorite color\",\n              \"typeDefinition\": \"text\"\n            }\n          ],\n        \"primaryKey\":\n          {\n            \"partitionKey\": [\"firstname\"],\n            \"clusteringKey\": [\"lastname\"]\n          },\n        \"tableOptions\":\n          {\n            \"defaultTimeToLive\": 0,\n            \"clusteringExpression\":\n              [{ \"column\": \"lastname\", \"order\": \"ASC\" }]\n          }\n }"
					},
					"response": [
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"users\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						}
					]
				},
				{
					"name": "Create table index evale_idx (ENTRIES)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a055c7cd-3138-4283-b2ff-28abf93a3447",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify table name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"column\": \"evaluations\",\n  \"name\": \"evale_idx\",\n  \"kind\": \"ENTRIES\",\n  \"ifNotExists\": true\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/indexes",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"indexes"
							],
							"query": [
								{
									"key": "pretty",
									"value": "<boolean>",
									"description": "format results",
									"disabled": true
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables\n\n{\n        \"name\": \"users\",\n        \"columnDefinitions\":\n          [\n        {\n              \"name\": \"firstname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"lastname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"favorite color\",\n              \"typeDefinition\": \"text\"\n            }\n          ],\n        \"primaryKey\":\n          {\n            \"partitionKey\": [\"firstname\"],\n            \"clusteringKey\": [\"lastname\"]\n          },\n        \"tableOptions\":\n          {\n            \"defaultTimeToLive\": 0,\n            \"clusteringExpression\":\n              [{ \"column\": \"lastname\", \"order\": \"ASC\" }]\n          }\n }"
					},
					"response": [
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"users\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						}
					]
				},
				{
					"name": "Create table index country_idx (TUPLE)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6bd936e-18ff-43f9-82bc-34ea19acc7a1",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify table name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"column\": \"current_country\",\n  \"name\": \"country_idx\",\n  \"ifNotExists\": true\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/indexes",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"indexes"
							],
							"query": [
								{
									"key": "pretty",
									"value": "<boolean>",
									"description": "format results",
									"disabled": true
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables\n\n{\n        \"name\": \"users\",\n        \"columnDefinitions\":\n          [\n        {\n              \"name\": \"firstname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"lastname\",\n              \"typeDefinition\": \"text\"\n            },\n        {\n              \"name\": \"favorite color\",\n              \"typeDefinition\": \"text\"\n            }\n          ],\n        \"primaryKey\":\n          {\n            \"partitionKey\": [\"firstname\"],\n            \"clusteringKey\": [\"lastname\"]\n          },\n        \"tableOptions\":\n          {\n            \"defaultTimeToLive\": 0,\n            \"clusteringExpression\":\n              [{ \"column\": \"lastname\", \"order\": \"ASC\" }]\n          }\n }"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 401,\n \"description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 400,\n \"description\": \"Invalid input\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 500,\n \"description\": \"Internal server error\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 409,\n \"description\": \"resource already exists.\"\n}"
						},
						{
							"name": "resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) The token returned from the authorization endpoint. Use this token in each request to the database.",
										"key": "X-Cassandra-Token",
										"value": "<string>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"users\",\n    \"ifNotExists\": false,\n    \"columnDefinitions\": [\n        {\n            \"name\": \"emailaddress\",\n            \"typeDefinition\": \"text\",\n            \"static\": false\n        }\n    ],\n    \"primaryKey\": {\n        \"partitionKey\": [\n            \"string\"\n        ],\n        \"clusteringKey\": [\n            \"string\"\n        ]\n    },\n    \"tableOptions\": {\n        \"defaultTimeToLive\": 0,\n        \"clusteringExpression\": [\n            {\n                \"column\": \"string\",\n                \"order\": \"ASC\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v2/schemas/keyspaces/:keyspace-id/tables?pretty=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"schemas",
										"keyspaces",
										":keyspace-id",
										"tables"
									],
									"query": [
										{
											"key": "pretty",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "keyspace-id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"users\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "retrieve schema",
			"item": [
				{
					"name": "Get a listing of keyspaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a1a40bf7-9c41-439c-95a4-98fb1fed0b12",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify keyspace users_keyspace\", function () {",
									"    var jsonData = pm.response.json();",
									"    for (var i=0; i <= jsonData.data.length; i++)",
									"    {",
									"        if (jsonData.data[i].name=== pm.variables.get(\"rkeyspace\")){",
									"            result=true;",
									"            //console.log(jsonData.data[i].name)",
									"            break;",
									"        }",
									"    }",
									"    pm.expect(true).to.eql(result);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces"
					},
					"response": []
				},
				{
					"name": "Get info for users_keyspace",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf7f2362-78e2-4aaf-a33d-8fddbbb91009",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify keyspace users_keyspace\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.name).to.eql(pm.variables.get(\"rkeyspace\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"user-agent": true,
							"connection": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace"
					},
					"response": []
				},
				{
					"name": "Get a listing of all tables with defined columns",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01c8cdcd-8647-4dc4-ae08-99448e21f6a9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify keyspace users_keyspace\", function () {",
									"    var jsonData = pm.response.json();",
									"    for (var i=0; i <= jsonData.data.length; i++)",
									"    {",
									"        if (jsonData.data[i].name=== pm.variables.get(\"rtable\")){",
									"            result=true;",
									"            //console.log(jsonData.data[i].name)",
									"            break;",
									"        }",
									"    }",
									"    pm.expect(true).to.eql(result);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables"
					},
					"response": []
				},
				{
					"name": "Get a listing of all columns in table users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78d199a7-024a-4ee4-95c8-f7fb87b32ce9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify column firstname\", function () {",
									"    var jsonData = pm.response.json();",
									"    for (var i=0; i <= jsonData.data.length; i++)",
									"    {",
									"        if (jsonData.data[i].name=== \"firstname\"){",
									"            result=true;",
									"            //console.log(jsonData.data[i].name)",
									"            break;",
									"        }",
									"    }",
									"    pm.expect(true).to.eql(result);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/columns",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"columns"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns"
					},
					"response": []
				},
				{
					"name": "Get column email info",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b72c095b-9741-4fa2-9ca7-fd861c9396ca",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify column firstname\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.name).to.eql(\"email\");",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/columns/:colName",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"columns",
								":colName"
							],
							"variable": [
								{
									"key": "colName",
									"value": "email"
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns/email"
					},
					"response": []
				},
				{
					"name": "Get table indexes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97cdba3d-2013-44e4-8adf-3c58e24823df",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify indexes\", function () {",
									"    var jsonData = pm.response.json();",
									"    for (var i=0; i <= jsonData.length; i++)",
									"    {",
									"        if (jsonData[i].index_name=== \"fav_books_idx\"){",
									"            result=true;",
									"            //console.log(jsonData.[i].index_name)",
									"            break;",
									"        }",
									"    }",
									"    pm.expect(true).to.eql(result);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/indexes",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"indexes"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns/email"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "insert data",
			"item": [
				{
					"name": "Insert Mookie Betts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d2339ef-e114-445b-90db-bf02f449c709",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify inserted information\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstname).to.eql(pm.variables.get(\"user1fn\"));",
									"    pm.expect(jsonData.lastname).to.eql(pm.variables.get(\"user1ln\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"{{user1fn}}\",\n    \"lastname\": \"{{user1ln}}\",\n    \"favorite_color\": \"blue\",\n    \"favorite_books\": \"{ 'Native Son', 'The Joy Luck Club' }\",\n    \"top_three_tv_shows\": \"[ 'The Magicians', 'The Librarians', 'Supergirl' ]\",\n    \"evaluations\": \"{ '2020':'excellent', '2019':'brilliant' }\",\n    \"current_country\": \"( 'USA', '2000-01-01', '2021-04-01' )\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_api}}/{{rkeyspace}}/{{rtable}}",
							"host": [
								"{{base_url}}{{base_rest_api}}"
							],
							"path": [
								"{{rkeyspace}}",
								"{{rtable}}"
							]
						},
						"description": "NOT WORKING, NEED TO FIGURE OUT\n\n,\n    \"address\": \"{ 'street': '345 Clark Ave', 'city': 'Chicago', 'state': 'Illinois', 'zip': '54321' }\"{{base_url}}/v2/keyspaces/users_keyspace/users"
					},
					"response": []
				},
				{
					"name": "Insert Janesha Doesha",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc4a2dbb-dca4-4f5f-acf9-4d56430f21b2",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Verify inserted information\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstname).to.eql(pm.variables.get(\"user2fn\"));",
									"    pm.expect(jsonData.lastname).to.eql(pm.variables.get(\"user2ln\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"firstname\": \"{{user2fn}}\",\n  \"lastname\": \"{{user2ln}}\",\n  \"favorite_color\": \"grey\",\n  \"favorite_books\": \"{ 'Emma', 'The Color Purple' }\",\n  \"top_three_tv_shows\": \"[ 'The Magicians', 'The Librarians', 'Agents of SHIELD' ]\",\n  \"evaluations\": \"{ 2020:good, 2019:okay }\",\n  \"current_country\": \"( 'France', '2016-01-01', '2020-02-02' )\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_api}}/{{rkeyspace}}/{{rtable}}",
							"host": [
								"{{base_url}}{{base_rest_api}}"
							],
							"path": [
								"{{rkeyspace}}",
								"{{rtable}}"
							]
						},
						"description": "NOT WORKING, NEED TO FIGURE OUT:\n,\n  \"address\": \"{ 'street': '1 Main St', 'city': 'San Francisco', 'state': 'California', 'zip': '12345' }\""
					},
					"response": []
				},
				{
					"name": "Patch user: Mookie Betts with email value",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f4a2cac-4b0f-4d79-9c34-32ca7f7f2e42",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inserted information\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.email).to.eql('mookie.betts.email@email.com');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"mookie.betts.email@email.com\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_api}}/{{rkeyspace}}/{{rtable}}/:id",
							"host": [
								"{{base_url}}{{base_rest_api}}"
							],
							"path": [
								"{{rkeyspace}}",
								"{{rtable}}",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user1fn}}/{{user1ln}}"
								}
							]
						},
						"description": "{{base_url}}/v2/keyspaces/users_keyspace/users/Mookie/Betts\n\n{\n    \"email\": \"mookie.betts.email@email.com\"\n}"
					},
					"response": []
				},
				{
					"name": "Put user: Mookie Betts email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "367cb6cf-43fc-4682-a79c-4a485425208a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inserted information\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.email).to.eql('mookie.betts.new-email@email.com');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept-encoding": true,
							"content-type": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"mookie.betts.new-email@email.com\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}{{base_rest_api}}/{{rkeyspace}}/{{rtable}}/:id",
							"host": [
								"{{base_url}}{{base_rest_api}}"
							],
							"path": [
								"{{rkeyspace}}",
								"{{rtable}}",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user1fn}}/{{user1ln}}"
								}
							]
						},
						"description": "{{base_url}}/v2/keyspaces/users_keyspace/users/Mookie/Betts\n\n{\n    \"email\": \"mookie.betts.new-email@email.com\"\n}"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "retrieve data",
			"item": [
				{
					"name": "Get row using partition key only",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0c0de82-0544-4de7-875e-0a1566355721",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inserted information\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data[0].firstname).to.eql(pm.variables.get(\"user1fn\"));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_api}}/{{rkeyspace}}/{{rtable}}/:partitionKey",
							"host": [
								"{{base_url}}{{base_rest_api}}"
							],
							"path": [
								"{{rkeyspace}}",
								"{{rtable}}",
								":partitionKey"
							],
							"variable": [
								{
									"key": "partitionKey",
									"value": "{{user1fn}}"
								}
							]
						},
						"description": "{{base_url}}/v2/keyspaces/users_keyspace/users?where={\"firstname\":{\"$eq\":\"Mookie\"}}"
					},
					"response": []
				},
				{
					"name": "Get record for user using primary key in path",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72be2cad-a056-4b8a-9947-a3ae3b38a9d1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inserted information\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data[0].firstname).to.eql(pm.variables.get(\"user1fn\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_api}}/{{rkeyspace}}/{{rtable}}/:id",
							"host": [
								"{{base_url}}{{base_rest_api}}"
							],
							"path": [
								"{{rkeyspace}}",
								"{{rtable}}",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user1fn}}/{{user1ln}}",
									"description": "Primary key is firstname/lastname"
								}
							]
						},
						"description": "{{base_url}}/v2/keyspaces/users_keyspace/users/Mookie/Betts"
					},
					"response": []
				},
				{
					"name": "Get row with WHERE clause (EQ, IN) simple queries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78285aef-ae2e-4b89-9071-234e0c56e4ac",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inserted information\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.firstname).to.eql(pm.variables.get(\"{{user1fn\")) || pm.expect(jsonData.data.firstname).to.eql(pm.variables.get(\"{{user2fn\"))  ;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_api}}/{{rkeyspace}}/{{rtable}}?where={\"firstname\":{\"$eq\":\"{{user1fn}}\"}}",
							"host": [
								"{{base_url}}{{base_rest_api}}"
							],
							"path": [
								"{{rkeyspace}}",
								"{{rtable}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"firstname\":{\"$eq\":\"{{user1fn}}\"}}",
									"description": "GET row where firstname=Mookie"
								},
								{
									"key": "where",
									"value": "{\"firstname\":{\"$eq\":\"{{user2fn}}\"}}",
									"description": "GET row where firstname=Janesha",
									"disabled": true
								},
								{
									"key": "where",
									"value": "{\"firstname\":{\"$in\":[\"{{user1fn}}\",\"{{user2fn}}\"]}}",
									"description": "GET row where firstname IN two values",
									"disabled": true
								}
							]
						},
						"description": "{{base_url}}/v2/keyspaces/users_keyspace/users?where={\"firstname\":{\"$eq\":\"Mookie\"}}"
					},
					"response": []
				},
				{
					"name": "Get row with WHERE clause (EQ, CONTAINS, CONTAINSKEY, CONTAINSENTRY) for collections, tuples, UDTs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9248119-1a9d-4a86-bb3f-f6dc7b84e7f5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Verify inserted information\", function () {",
									"    var jsonData = pm.response.json();",
									"    // THIS NEXT STATEMENT ONLY WORKS FOR A SINGLE RESPONSE, I NEED TO REWRITE WITH A LOOP",
									"    pm.expect(jsonData.data[0].favorite_books).to.include('Emma');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_api}}/{{rkeyspace}}/{{rtable}}?where={\"favorite_books\":{\"$contains\":\"Emma\"}}&fields=firstname,favorite_books",
							"host": [
								"{{base_url}}{{base_rest_api}}"
							],
							"path": [
								"{{rkeyspace}}",
								"{{rtable}}"
							],
							"query": [
								{
									"key": "where",
									"value": "{\"favorite_books\":{\"$contains\":\"Emma\"}}",
									"description": "GET SET item match"
								},
								{
									"key": "where",
									"value": "{\"top_three_tv_shows\":{\"$contains\":\"The%20Magicians\"}}",
									"description": "GET LIST item match",
									"disabled": true
								},
								{
									"key": "where",
									"value": "{\"evaluations\":{\"$containsKey\":\"2020\"}}",
									"description": "GET MAP KEY match",
									"disabled": true
								},
								{
									"key": "where",
									"value": "{\"evaluations\":{\"$contains\":\"okay\"}}",
									"description": "GET MAP VALUE match",
									"disabled": true
								},
								{
									"key": "where",
									"value": "{\"evaluations\":{\"$containsEntry\":{\"key\":\"2020\",\"value\":\"good\"}}}",
									"description": "GET MAP ENTRY match",
									"disabled": true
								},
								{
									"key": "where",
									"value": "{\"current_country\":{\"$eq\":\"('France','2016-01-01','2020-02-02')\"}}",
									"description": "GET TUPLE match",
									"disabled": true
								},
								{
									"key": "where",
									"value": "{\"address\":{\"$eq\":{\"street\":\"1%20Main%20St\",\"city\":\"San%20Francisco\",\"state\":\"California\",\"zip\":12345}}}",
									"description": "GET UDT match\n",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "firstname,favorite_books",
									"description": "Specifiy fields to return"
								}
							]
						},
						"description": "{{base_url}}/v2/keyspaces/users_keyspace/users?where={\"firstname\":{\"$eq\":\"Mookie\"}}"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "delete data",
			"item": [
				{
					"name": "Delete record of user: Mookie Betts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29547c3e-c027-4102-a001-4d4eed07bfe3",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_api}}/{{rkeyspace}}/{{rtable}}/:id",
							"host": [
								"{{base_url}}{{base_rest_api}}"
							],
							"path": [
								"{{rkeyspace}}",
								"{{rtable}}",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user1fn}}/{{user1ln}}"
								}
							]
						},
						"description": "{{base_url}}/v2/keyspaces/users_keyspace/users/Mookie/Betts"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "delete schema",
			"item": [
				{
					"name": "Delete column email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a563d27-4708-432e-ab98-7e081a49d092",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/columns/:colName",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"columns",
								":colName"
							],
							"variable": [
								{
									"key": "colName",
									"value": "email"
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns/email"
					},
					"response": []
				},
				{
					"name": "Drop table index fav_books_idx",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e26393e4-c375-4db7-8768-c8f74abde53a",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}/indexes/:idxname",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}",
								"indexes",
								":idxname"
							],
							"variable": [
								{
									"key": "idxname",
									"value": "fav_books_idx",
									"description": "Change idxname to any index name to delete the index.\n"
								}
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users/columns/email"
					},
					"response": []
				},
				{
					"name": "GQL: Drop type address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "574e5b1d-caea-41df-a1ff-c4486225d53a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation dropTypeAddress {\n  dropType(\n      keyspaceName:\"{{rkeyspace}}\" \n      typeName:\"address_type\"\n      ifExists:true\n    )\n}",
								"variables": ""
							},
							"options": {
								"graphql": {}
							}
						},
						"url": {
							"raw": "{{gql_base_url}}{{gql_base_schema}}",
							"host": [
								"{{gql_base_url}}{{gql_base_schema}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete table users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95d7b9cc-fbfa-4bd5-baf5-f1bc2855f69e",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}/tables/{{rtable}}",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}",
								"tables",
								"{{rtable}}"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace/tables/users"
					},
					"response": []
				},
				{
					"name": "Delete keyspace users_keyspace  (Stargate OSS only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0445d4cd-dae7-4f10-9996-2d1097778637",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Cassandra-Token",
								"value": "{{AUTH_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}{{base_rest_schema}}/{{rkeyspace}}",
							"host": [
								"{{base_url}}{{base_rest_schema}}"
							],
							"path": [
								"{{rkeyspace}}"
							]
						},
						"description": "{{base_url}}/v2/schemas/keyspaces/users_keyspace"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a8c7ab41-23e1-4e52-8b7c-31e25011c591",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d5e24e72-321b-41f8-b377-9c91ba101d13",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}