type Reader @key @cql_entity(name: "reader") @cql_input {
  name: String! @cql_column(partitionKey: true)
  user_id: Uuid! @cql_column(clusteringOrder: ASC)
  birthdate: Date @cql_index(name: "date_idx")
  email: [String] @cql_column(typeHint: "set<varchar>")
  reviews: [Review]  @cql_index(name: "review_idx", target: VALUES)
  address: [Address]
}

# type Mutation {
# insertReader(reader: ReaderInput!): Reader
# updateReader(reader: ReaderInput!): Boolean @cql_update
# deleteReader(reader: ReaderInput!): Boolean
# }
#
# type Query {
#   reader(name:String!, user_id:Uuid): [Reader]
#   readerGT(
#     name: String!,
#     user_id: Uuid! @cql_where(field: "user_id", predicate:GT)
#   ): [Reader]
#   readerCONTAINS(
#     reviews: ReviewInput! @cql_where(field: "reviews", predicate: CONTAINS)
#   ): [Reader]
# }
